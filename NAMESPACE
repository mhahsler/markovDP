# Generated by roxygen2: do not edit by hand

S3method(absorbing_states,MDP)
S3method(absorbing_states,MDPTF)
S3method(act,MDP)
S3method(act,MDPTF)
S3method(add_linear_approx_Q_function,MDP)
S3method(add_linear_approx_Q_function,MDPTF)
S3method(add_policy,MDP)
S3method(add_policy,MDPTF)
S3method(available_actions,MDP)
S3method(available_actions,MDPTF)
S3method(greedy_action,MDP)
S3method(greedy_action,MDPTF)
S3method(greedy_policy,MDP)
S3method(greedy_policy,MDPTF)
S3method(greedy_policy,matrix)
S3method(plot_value_function,MDPE)
S3method(policy,MDPE)
S3method(print,MDP)
S3method(print,MDPTF)
S3method(reachable_states,"function")
S3method(reachable_states,MDP)
S3method(reachable_states,MDPTF)
S3method(regret,MDP)
S3method(reward,MDP)
S3method(reward_matrix,MDP)
S3method(sample_MDP,MDP)
S3method(sample_MDP,MDPTF)
S3method(solve_MDP,MDP)
S3method(solve_MDP,MDPTF)
S3method(start,MDP)
S3method(start,MDPTF)
S3method(transition_matrix,MDP)
S3method(value_function,MDPE)
export(A)
export(MDP)
export(MDPTF)
export(P_)
export(Q_random)
export(Q_values)
export(Q_zero)
export(R_)
export(S)
export(V_random)
export(V_zero)
export(absorbing_states)
export(act)
export(action)
export(action_discrepancy)
export(add_linear_approx_Q_function)
export(add_policy)
export(approx_Q_value)
export(approx_V_plot)
export(approx_greedy_action)
export(approx_greedy_policy)
export(available_actions)
export(bellman_operator)
export(bellman_update)
export(colors_continuous)
export(colors_discrete)
export(convergence_horizon)
export(create_basis_coefs)
export(curve_multiple_directed)
export(features2state)
export(find_reachable_states)
export(get_state_features)
export(greedy_action)
export(greedy_policy)
export(gw_animate)
export(gw_init)
export(gw_matrix)
export(gw_maze_MDP)
export(gw_maze_MDPTF)
export(gw_path)
export(gw_plot)
export(gw_plot_transition_graph)
export(gw_random_maze)
export(gw_rc2s)
export(gw_read_maze)
export(gw_s2rc)
export(gw_transition_prob)
export(gw_transition_prob_end_state)
export(gw_transition_prob_named)
export(gw_transition_prob_sparse)
export(induced_reward_matrix)
export(induced_transition_matrix)
export(is_converged_MDP)
export(is_solved_MDP)
export(manual_policy)
export(normalize_MDP)
export(normalize_action)
export(normalize_action_id)
export(normalize_action_label)
export(normalize_state)
export(normalize_state_features)
export(normalize_state_id)
export(normalize_state_label)
export(plot_transition_graph)
export(plot_value_function)
export(policy)
export(policy_evaluation)
export(policy_evaluation_LP)
export(random_policy)
export(reachable_states)
export(regret)
export(remove_unreachable_states)
export(reward)
export(reward_matrix)
export(round_stochastic)
export(s)
export(sample_MDP)
export(schedule_exp)
export(schedule_exp2)
export(schedule_harmonic)
export(schedule_linear)
export(schedule_log)
export(solve_MDP)
export(solve_MDP_APPROX)
export(solve_MDP_APPROX_LAMBDA)
export(solve_MDP_DP)
export(solve_MDP_LP)
export(solve_MDP_MC)
export(solve_MDP_SAMP)
export(solve_MDP_TD)
export(solve_MDP_TDN)
export(start_vector)
export(state2features)
export(transformation_RBF_basis)
export(transformation_fourier_basis)
export(transformation_linear_basis)
export(transformation_polynomial_basis)
export(transition_graph)
export(transition_matrix)
export(unreachable_states)
export(value_error)
export(value_function)
export(visit_probability)
import(Rcpp)
importFrom(Matrix,Math)
importFrom(Matrix,Math2)
importFrom(Matrix,cBind)
importFrom(Matrix,coerce)
importFrom(Matrix,colSums)
importFrom(Matrix,crossprod)
importFrom(Matrix,diag)
importFrom(Matrix,drop0)
importFrom(Matrix,nnzero)
importFrom(Matrix,rBind)
importFrom(Matrix,rowSums)
importFrom(Matrix,spMatrix)
importFrom(Matrix,sparseVector)
importFrom(Matrix,t)
importFrom(Matrix,which)
importFrom(MatrixExtra,as.csr.matrix)
importFrom(MatrixExtra,as.sparse.vector)
importFrom(fastmap,fastmap)
importFrom(fastmap,faststack)
importFrom(foreach,"%do%")
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(foreach,getDoParWorkers)
importFrom(foreach,times)
importFrom(grDevices,hcl.colors)
importFrom(graphics,abline)
importFrom(graphics,axis)
importFrom(graphics,barplot)
importFrom(graphics,box)
importFrom(graphics,contour)
importFrom(graphics,image)
importFrom(graphics,legend)
importFrom(graphics,text)
importFrom(igraph,"%>%")
importFrom(igraph,"E<-")
importFrom(igraph,"V<-")
importFrom(igraph,E)
importFrom(igraph,V)
importFrom(igraph,add_layout_)
importFrom(igraph,as_data_frame)
importFrom(igraph,as_tree)
importFrom(igraph,graph_from_adjacency_matrix)
importFrom(igraph,graph_from_data_frame)
importFrom(igraph,induced_subgraph)
importFrom(igraph,norm_coords)
importFrom(methods,as)
importFrom(methods,is)
importFrom(methods,new)
importFrom(stats,runif)
importFrom(stats,setNames)
importFrom(stats,start)
importFrom(utils,head)
importFrom(utils,object.size)
importFrom(utils,read.table)
importFrom(utils,tail)
importFrom(utils,type.convert)
useDynLib(markovDP, .registration=TRUE)
