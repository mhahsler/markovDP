# Generated by roxygen2: do not edit by hand

S3method(absorbing_states,MDP)
S3method(action,MDP)
S3method(add_policy,MDP)
S3method(epoch_to_episode,MDP)
S3method(plot_value_function,MDP)
S3method(policy,MDP)
S3method(print,MDP)
S3method(reachable_states,MDP)
S3method(regret,MDP)
S3method(reward,MDP)
S3method(reward_matrix,MDP)
S3method(transition_matrix,MDP)
S3method(value_function,MDP)
export(MDP)
export(R_)
export(T_)
export(absorbing_states)
export(action)
export(actions)
export(add_policy)
export(bellman_operator)
export(colors_continuous)
export(colors_discrete)
export(curve_multiple_directed)
export(epoch_to_episode)
export(greedy_action)
export(greedy_policy)
export(gridworld_animate)
export(gridworld_init)
export(gridworld_matrix)
export(gridworld_maze_MDP)
export(gridworld_plot)
export(gridworld_plot_policy)
export(gridworld_plot_transition_graph)
export(gridworld_rc2s)
export(gridworld_read_maze)
export(gridworld_s2rc)
export(is_solved_MDP)
export(manual_policy)
export(normalize_MDP)
export(plot_transition_graph)
export(plot_value_function)
export(policy)
export(policy_evaluation)
export(q_values)
export(random_policy)
export(reachable_states)
export(regret)
export(remove_unreachable_states)
export(reward)
export(reward_matrix)
export(round_stochastic)
export(simulate_MDP)
export(solve_MDP)
export(solve_MDP_DP)
export(solve_MDP_LP)
export(solve_MDP_TD)
export(start_vector)
export(transition_graph)
export(transition_matrix)
export(value_function)
import(Rcpp)
importFrom(Matrix,Math)
importFrom(Matrix,Math2)
importFrom(Matrix,cBind)
importFrom(Matrix,coerce)
importFrom(Matrix,colSums)
importFrom(Matrix,crossprod)
importFrom(Matrix,nnzero)
importFrom(Matrix,rBind)
importFrom(Matrix,spMatrix)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(foreach,getDoParWorkers)
importFrom(foreach,times)
importFrom(grDevices,hcl.colors)
importFrom(graphics,abline)
importFrom(graphics,barplot)
importFrom(graphics,box)
importFrom(graphics,image)
importFrom(graphics,legend)
importFrom(graphics,text)
importFrom(igraph,"%>%")
importFrom(igraph,"E<-")
importFrom(igraph,"V<-")
importFrom(igraph,E)
importFrom(igraph,V)
importFrom(igraph,add_layout_)
importFrom(igraph,as_data_frame)
importFrom(igraph,as_tree)
importFrom(igraph,graph_from_adjacency_matrix)
importFrom(igraph,graph_from_data_frame)
importFrom(igraph,induced_subgraph)
importFrom(igraph,norm_coords)
importFrom(methods,as)
importFrom(stats,runif)
importFrom(utils,head)
importFrom(utils,read.table)
importFrom(utils,tail)
importFrom(utils,type.convert)
useDynLib(markovDP, .registration=TRUE)
