% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/absorbing_states.R
\name{absorbing_states}
\alias{absorbing_states}
\title{Absorbing States}
\usage{
absorbing_states(
  model,
  state = NULL,
  sparse = "states",
  use_precomputed = TRUE,
  ...
)
}
\arguments{
\item{model}{a \link{MDP} object.}

\item{state}{a single state to check. This can be much faster if
the model contains a transition model implemented as a function.
\code{NULL} means all states are checked.}

\item{sparse}{logical; if return a sparse logical vector?}

\item{use_precomputed}{logical; should precomputed values in the MDP be used?}

\item{...}{further arguments are passed on.}
}
\value{
\code{absorbing_states()} returns a logical vector indicating
if the states are absorbing (terminal).
}
\description{
Find absorbing states using the transition model.
}
\details{
The function \code{absorbing_states()} checks if a state or a set of states are
absorbing (terminal states). A state is absorbing
if there is for all actions a probability of 1 for staying in the state.
}
\examples{
data(Maze)

gw_matrix(Maze)
gw_matrix(Maze, what = "labels")
gw_matrix(Maze, what = "absorbing")

# -1 and +1 are absorbing states
absorbing_states(Maze)
absorbing_states(Maze, sparse = FALSE)
absorbing_states(Maze, sparse = "states")

# check individual states
absorbing_states(Maze, "s(1,1)")
absorbing_states(Maze, "s(1,4)")
}
\seealso{
Other MDP: 
\code{\link{MDP}()},
\code{\link{Q_values}()},
\code{\link{act}()},
\code{\link{available_actions}()},
\code{\link{bellman_update}()},
\code{\link{convergence_horizon}()},
\code{\link{greedy_action}()},
\code{\link{gridworld}},
\code{\link{policy_evaluation}()},
\code{\link{regret}()},
\code{\link{sample_MDP}()},
\code{\link{solve_MDP}()},
\code{\link{transition_graph}()},
\code{\link{transition_matrix}()},
\code{\link{unreachable_states}()},
\code{\link{value_function}()}

Other MDPE: 
\code{\link{MDPE}()},
\code{\link{act}()},
\code{\link{sample_MDP.MDPE}()},
\code{\link{solve_MDP}()},
\code{\link{solve_MDP_APPROX}()}
}
\author{
Michael Hahsler
}
\concept{MDP}
\concept{MDPE}
