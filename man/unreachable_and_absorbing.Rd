% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unreachable_and_absorbing.R
\name{unreachable_and_absorbing}
\alias{unreachable_and_absorbing}
\alias{unreachable_states}
\alias{absorbing_states}
\alias{remove_unreachable_states}
\title{Unreachable and Absorbing States}
\usage{
unreachable_states(
  model,
  horizon = Inf,
  sparse = "states",
  use_precomputed = TRUE,
  progress = TRUE,
  ...
)

absorbing_states(
  model,
  state = NULL,
  sparse = "states",
  use_precomputed = TRUE,
  ...
)

remove_unreachable_states(model, use_precomputed = TRUE, ...)
}
\arguments{
\item{model}{a \link{MDP} object.}

\item{horizon}{only states that can be reached within the
horizon are reachable.}

\item{sparse}{logical; return a sparse logical vector?}

\item{use_precomputed}{logical; should precomputed values in the MDP be used?}

\item{progress}{logical; show a progress bar?}

\item{...}{further arguments are passed on.}

\item{state}{logical; check a single state. This can be much faster if
the model contains a transition model implemented as a function.}
}
\value{
\code{unreachable_states()} returns a
logical vector indicating the unreachable states.

\code{absorbing_states()} returns a logical vector indicating
if the states are absorbing (terminal).

\code{remove_unreachable_states()} returns a model with all
unreachable states removed.
}
\description{
Find unreachable and absorbing states using the transition model.
}
\details{
The function \code{unreachable_states()} checks if states
cannot be reached from any other state. It performs a depth-first
search which can be slow.
The search breaks cycles to avoid an infinite loop.
The search depth can be restricted using
\code{horizon}.

The function \code{remove_unreachable_states()} simplifies a model by
removing unreachable states from the model description.

The function \code{absorbing_states()} checks if a state or a set of states are
absorbing (terminal states). A state is absorbing
if there is for all actions a probability of 1 for staying in the state.
}
\examples{
data(Maze)

gw_matrix(Maze)
gw_matrix(Maze, what = "labels")

# -1 and +1 are absorbing states
absorbing_states(Maze)
absorbing_states(Maze, sparse = FALSE)
absorbing_states(Maze, sparse = "states")

# all states in the model are reachable
unreachable_states(Maze)
unreachable_states(Maze, sparse = FALSE)
unreachable_states(Maze, sparse = "states")
}
\seealso{
Other MDP: 
\code{\link{MDP}()},
\code{\link{accessors}},
\code{\link{act}()},
\code{\link{available_actions}()},
\code{\link{bellman_update}()},
\code{\link{gridworld}},
\code{\link{policy_evaluation}()},
\code{\link{q_values}()},
\code{\link{regret}()},
\code{\link{sample_MDP}()},
\code{\link{solve_MDP}()},
\code{\link{transition_graph}()},
\code{\link{value_function}()}
}
\author{
Michael Hahsler
}
\concept{MDP}
