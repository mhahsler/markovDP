% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessors.R, R/accessors_reward.R,
%   R/accessors_transitions.R
\name{accessors}
\alias{accessors}
\alias{start_vector}
\alias{reward_matrix}
\alias{transition_matrix}
\title{Access to Parts of the Model Description}
\usage{
start_vector(model, start = NULL, sparse = NULL)

reward_matrix(
  model,
  action = NULL,
  start.state = NULL,
  end.state = NULL,
  ...,
  sparse = NULL,
  simplify = FALSE
)

transition_matrix(
  model,
  action = NULL,
  start.state = NULL,
  end.state = NULL,
  ...,
  sparse = NULL,
  simplify = FALSE,
  trans_keyword = TRUE
)
}
\arguments{
\item{model}{A \link{MDP} object.}

\item{start}{a start state description (see \link{MDP}). If \code{NULL} then the
start vector is created using the start stored in the model.}

\item{sparse}{logical; use sparse representation. \code{NULL} returns the
representation stored in the problem description which saves the time
for conversion.}

\item{action}{name or index of an action.}

\item{start.state, end.state}{name or index of the state.}

\item{...}{further arguments are passed on.}

\item{simplify}{logical; try to simplify action lists into a vector or matrix?}

\item{trans_keyword}{logical; translate keywords like "uniform" into matrices.}
}
\value{
A list or a list of lists of matrices.
}
\description{
Functions to provide uniform access to different parts of the MDP
problem description.
}
\details{
Several parts of the MDP description can be defined in different ways. In particular,
the fields \code{transition_prob}, \code{reward}, and \code{start} can be defined using matrices, data frames,
keywords, or functions. See \link{MDP} for details.
The functions provided here, provide unified access to the data in these fields
to make writing code easier.
\subsection{Transition Probabilities \eqn{T(s'|s,a)}}{

\code{transition_matrix()} accesses the transition model. The complete model
is a list with one element for each action. Each element contains a states x states matrix
with \eqn{s} (\code{start.state}) as rows and \eqn{s'} (\code{end.state}) as columns.
Matrices with a density below 50\% can be requested in sparse format
(as a \link[Matrix:dgCMatrix-class]{Matrix::dgCMatrix}).
}

\subsection{Reward \eqn{R(s,s',a)}}{

\code{reward_matrix()} accesses the reward model.
The preferred representation is a data.frame with the
columns \code{action}, \code{start.state}, \code{end.state},
and \code{value}. This is a sparse representation.
The dense representation is a list of lists of matrices.
The list levels are \eqn{a} (\code{action})  and \eqn{s} (\code{start.state}).
The matrices are column vectors with rows representing \eqn{s'} (\code{end.state}).
The accessor converts the column vectors automatically into matrices with
start states as rows and end states as columns. This conversion can be suppressed
by calling \code{reward_matrix(..., state_matrix = FALSE)}
Note that the reward structure cannot be efficiently stored using a standard sparse matrix
since there might be a fixed cost for each action
resulting in no entries with 0.
}

\subsection{Start state}{

\code{start_vector()} translates the start state description into a probability vector.
}
}
\examples{
data("Maze")
gridworld_matrix(Maze)

# List of |A| transition matrices. One per action in the from start.states x end.states
Maze$transition_prob
transition_matrix(Maze)
transition_matrix(Maze, action = "up", sparse = TRUE)
transition_matrix(Maze,
  action = "up",
  start.state = "s(3,1)", end.state = "s(2,1)"
)

# List of list of reward matrices. 1st level is action and second level is the
#  start state in the form of a column vector with elements for end states.
Maze$reward
reward_matrix(Maze)
reward_matrix(Maze, sparse = TRUE)
reward_matrix(Maze,
  action = "up",
  start.state = "s(3,1)", end.state = "s(2,1)"
)

# Translate the initial start probability vector
Maze$start
start_vector(Maze)

# Normalize the whole model using dense representation
Maze_norm <- normalize_MDP(Maze, sparse = FALSE)
Maze_norm$transition_prob
}
\seealso{
Other MDP: 
\code{\link{MDP}()},
\code{\link{act}()},
\code{\link{actions}()},
\code{\link{add_policy}()},
\code{\link{gridworld}},
\code{\link{policy_evaluation}()},
\code{\link{q_values}()},
\code{\link{regret}()},
\code{\link{sample_MDP}()},
\code{\link{solve_MDP}()},
\code{\link{transition_graph}()},
\code{\link{unreachable_and_absorbing}},
\code{\link{value_function}()}
}
\author{
Michael Hahsler
}
\concept{MDP}
